# ====================================================================================
# Inputs and configuration

inputs:

  # ====================================================================================
  # 🗃️ Base content

  # Base content
  base:
    description: Metrics base content
    default: header, activity, community, repositories, metadata

  # Number of repositories to use to computes metrics
  # Using more will result in more accurate metrics, but you may hit GitHub rate-limit more easily if you use a lot of plugins
  repositories:
    description: Number of repositories to use
    default: 100

  # Number of repositories to load at once by queries
  # If you encounter GitHub queries timeouts, using a lower value here may solve issues
  repositories_batch:
    description: Number of repositories to load at once by queries
    default: 100

  # Include forked repositories into metrics
  repositories_forks:
    description: Include forks in metrics
    default: no

  # Filter repositories by user affiliations (you can specify multiple affiliations constraints)
  # Set to "" to use all repositories related to you
  # Note that it may affect some plugin outputs (broad affiliations will result in less representative metrics)
  repositories_affiliations:
    description: Repositories affiliations
    default: owner

  # List of default repositories that will be skipped
  # Plugins supporting a "skip repositories option" will automatically append repositories listed in this option
  repositories_skipped:
    description: Default repositories to skip
    default: ""

  # List of surnames or email addresses you use when authoring commits
  # These are mostly used to perform commits analysis to detect ownership
  commits_authoring:
    description: List of surnames or email addresses you use when authoring commits
    default: .user.login

  # ====================================================================================
  # 🧱 Core

  # User account personal token
  # No additional scopes are needed unless you want to include private repositories metrics
  # Some plugins may also require additional scopes
  # ────────────────────────────────────────────────────────────────
  # If you're only using plugins which don't really require a GitHub token, you may pass "NOT_NEEDED" as value
  token:
    description: GitHub Personal Token
    required: true

  # GitHub username
  # Defaults to "token" owner
  user:
    description: GitHub username
    default: "H4ckerxx44"

  # GitHub repository
  # Compute metrics for a repository instead ("user" being the repository owner)
  # Check https://github.com/lowlighter/metrics/blob/master/source/templates/repository/README.md for more informations
  repo:
    description: GitHub repository
    default: ""

  # Set to "${{ github.token }}" or "${{ secrets.GITHUB_TOKEN }}"
  # GITHUB_TOKEN is a special auto-generated token restricted to current repository, which is used to push files in it
  committer_token:
    description: GitHub Token used to commit metrics
    default: ${{ secrets.HEHE }}

  # Branch used to commit rendered metrics
  committer_branch:
    description: Branch used to commit rendered metrics
    default: ""

  # Commit message
  # Use "${filename}" to display filename
  committer_message:
    description: Commit message
    default: Update ${filename} - [Skip GitHub Action]

  # Instead of saving metrics to a repository, it's possible to save them to a gist to avoid "commits pollution"
  # Gist must be created prior and you must pass its identifier in the following option
  # Set "gist" in "output_action" to use this option
  committer_gist:
    description: Gist used to store metrics
    default: ""

  # Rendered metrics output path, relative to repository's root
  # When using "*", the correct extension will automatically on "config_output" value
  filename:
    description: Rendered metrics output path
    default: github-metrics.*

  # Rendered markdown output path (when using a markdown template)
  # It can be either a local path or a link (e.g. raw.githubusercontent.com)
  markdown:
    description: Rendered markdown output path
    default: TEMPLATE.md

  # Rendered markdown file cache (when using a markdown template)
  markdown_cache:
    description: Rendered markdown file cache
    default: .cache

  # Output action
  output_action:
    description: Output action
    default: commit

  # Output condition
  output_condition:
    description: Output condition
    default: always

  # Optimize SVG image to reduce its filesize
  # Some templates may not support this option
  optimize:
    description: SVG optimization
    default: css, xml

  # Setup additional templates from remote repositories
  setup_community_templates:
    description: Additional community templates to setup
    default: ""

  # Template to use
  # To use community template, prefix its name with "@"
  template:
    description: Template to use
    default: classic

  # Additional query parameters (JSON string)
  # Some templates may require additional parameters which you can specify here
  # Do not use this option to pass plugins parameters as they'll be overwritten by the other options
  query:
    description: Additional query parameters
    default: "{}"

  # Define additional CSS that will be injected in used template
  # Example:
  # config_extras_css꞉ |
  #   h2 {
  #     color: red;
  #   }
  extras_css:
    description: Extra CSS
    default: ""

  # Timezone used by metrics
  # See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  config_timezone:
    description: Timezone used
    default: ""

  # Specify in which order metrics content will be displayed
  # If you omit some partials, they'll be appended at the end in default order
  # See "partials/_.json" of each template for a list of supported partials
  config_order:
    description: Configure content order
    default: ""

  # Use twemojis instead of emojis
  # May increase filesize but emojis will be rendered the same across all platforms
  config_twemoji:
    description: Use twemojis instead of emojis
    default: no

  # Render GitHub custom emojis (like ":octocat:", see full list at https://api.github.com/emojis)
  # May increase filesize
  config_gemoji:
    description: Use GitHub custom emojis
    default: yes

  # Render display width
  config_display:
    description: Render display width
    default: regular

  # Enable SVG CSS animations
  config_animations:
    description: SVG CSS animations
    default: yes

  # Encode images links into base64 data
  # Advised to be true when generating images and false when generating texts or JSON
  config_base64:
    description: Encode images links into base64 data
    default: yes

  # Configure padding for output image (percentage value)
  # It can be used to add padding to generated metrics if rendering is cropped or has too much empty space
  # Specify one value (for both width and height) or two values (one for width and one for height)
  config_padding:
    description: Image padding
    default: 0, 8 + 11%

  # Metrics output format
  config_output:
    description: Output image format
    default: auto

  # Number of retries in case rendering fail
  retries:
    description: Number of retries
    default: 3

  # Time to wait (in seconds) before each retry
  retries_delay:
    description: Time to wait (in seconds) before each retry
    default: 300

  # Throw on plugins errors
  # If disabled, metrics will handle errors gracefully with a message in rendered metrics
  plugins_errors_fatal:
    description: Die on plugins errors
    default: no

  # Debug mode
  # Note that this will automatically be enabled if job fails
  debug:
    description: Debug logs
    default: no

  # Ensure SVG can be correctly parsed after generation
  verify:
    description: Verify SVG
    default: no

  # Debug flags
  debug_flags:
    description: Debug flags
    default: ""

  # Dry-run mode (perform generation without output)
  # Unlike "output_action" set to "none", output file won't be available in "/metrics_renders"
  dryrun:
    description: Enable dry-run
    default: no

  # Experimental features
  # Note that no backward compatibility are guaranteed for these features
  experimental_features:
    description: Experimental features
    default: ""

  # Use mocked data to bypass external APIs
  use_mocked_data:
    description: Use mocked data instead of live APIs
    default: no

  # Use a pre-built image from GitHub registry when using unreleased versions of "lowlighter/metrics"
  # This option has no effect on forks (images will always be rebuilt from Dockerfile)
  # See https://github.com/users/lowlighter/packages/container/package/metrics for more information
  use_prebuilt_image:
    description: Use pre-built image from GitHub registry
    default: yes

  # Time to wait (in seconds) at the end of job
  # Use this to avoid triggering abuse mechanics on large workflows
  delay:
    description: Use this to avoid triggering abuse mechanics on large workflows
    default: 0

  # ====================================================================================
  # 📅 Isometric commit calendar

  # Enable or disable plugin
  plugin_isocalendar:
    description: Display an isometric view of your commits calendar
    default: yes

  # Set time window shown by isometric calendar
  plugin_isocalendar_duration:
    description: Set time window shown by isometric calendar
    default: full-year

  # ====================================================================================
  # 🈷️ Most used languages

  # Enable or disable plugin
  plugin_languages:
    description: Display most used languages metrics
    default: no

  # List of languages that will be ignored
  plugin_languages_ignored:
    description: Languages to ignore
    default: ""

  # List of repositories that will be skipped
  plugin_languages_skipped:
    description: Repositories to skip
    default: ""

  # Number of languages to display
  # Set to 0 to disable limitations
  plugin_languages_limit:
    description: Maximum number of languages to display
    default: 8

  # Sections to display
  plugin_languages_sections:
    description: Sections to display
    default: most-used

  # Overrides default languages colors
  # Use `${n}:${color}` to change the color of the n-th most used language (e.g. "0:red" to make your most used language red)
  # Use `${language}:${color}` to change the color of named language (e.g. "javascript:red" to make JavaScript language red, language case is ignored)
  # Use a value from `colorsets.json` to use a predefined set of colors
  # Both hexadecimal and named colors are supported
  # This cannot be used when "plugin_languages_limit" is greater than 8
  plugin_languages_colors:
    description: Custom languages colors
    default: github

  # Overrides default languages name
  # Use `${language}:${alias}` to change the name of language (e.g. "javascript:JS" to make JavaScript render as "JS", case of left operand ignored)
  plugin_languages_aliases:
    description: Custom languages names
    default: ""

  # Languages additional details
  plugin_languages_details:
    description: Additional details
    default: ""

  # Minimum threshold (in percentage) to reach for languages to be displayed
  plugin_languages_threshold:
    description: Minimum threshold
    default: 0%

  # Compute indepth languages statistics by cloning repositories and processing your commits individually
  # See documentation before enabling
  plugin_languages_indepth:
    description: Indepth languages processing (see documentation before enabling)
    default: false

  # Analysis timeout (in minutes)
  # In case of timeout, it'll automatically fallback to default algorithm
  # Please be nice with GitHub Actions and disable `plugin_languages_indepth` if your account is not supported
  # See documentation before enabling
  plugin_languages_analysis_timeout:
    description: Languages analysis timeout
    default: 15

  # GitHub language categories to display
  plugin_languages_categories:
    description: Language categories to display
    default: markup, programming

  # GitHub language categories to display in recently-used section
  plugin_languages_recent_categories:
    description: Language categories to display (for recently used section)
    default: markup, programming

  # Number of activity events to load (for recently used languages statistics)
  # A high number will consume more requests
  plugin_languages_recent_load:
    description: Number of events to load (for recently used section)
    default: 300

  # Filter events by age (for recently used languages statistics)
  # Set to 0 to disable age filtering
  # Note that metrics won't be able to load more events than GitHub is able to provide
  plugin_languages_recent_days:
    description: Maximum event age (for recently used section)
    default: 14

  # ====================================================================================
  # 💡 Coding habits

  # Enable or disable plugin
  plugin_habits:
    description: Display coding habits metrics
    default: yes

  # Number of events to use to computes habits
  # Using more will result in more accurate metrics, but you may hit GitHub rate-limit more easily
  plugin_habits_from:
    description: Number of events to use
    default: 1000

  # Filter used events to compute habits by age
  plugin_habits_days:
    description: Maximum event age
    default: 30

  # Display tidbits about your most active hours/days, indents used (spaces/tabs), etc.
  # This is deduced from your recent activity
  plugin_habits_facts:
    description: Display coding habits collected facts based on recent activity
    default: yes

  # Display charts of most active time of the day and most active day of the week
  # Also display languages recently used (this is not the same as plugin_languages, as the latter is an all-time stats)
  plugin_habits_charts:
    description: Display coding habits charts based on recent activity
    default: yes

  # Trim unused hours on daily chart
  plugin_habits_trim:
    description: Trim unused hours on daily chart
    default: no

  # ====================================================================================
  # 🗂️ Active projects

  # Enable or disable plugin
  plugin_projects:
    description: Display active projects
    default: yes

  # Number of projects to display
  # Set to 0 to only display "plugin_projects_repositories" projects
  # Projects listed in "plugin_projects_repositories" are not affected by this option
  plugin_projects_limit:
    description: Maximum number of projects to display
    default: 4

  # List of repository projects to display, using the following format:
  # :user/:repo/projects/:project_id
  plugin_projects_repositories:
    description: List of repository project identifiers to disaplay
    default: ""

  # Display projects descriptions
  plugin_projects_descriptions:
    description: Display projects descriptions
    default: yes

  # ====================================================================================
  # 📰 Recent activity

  # Enable or disable plugin
  plugin_activity:
    description: Display recent activity
    default: yes

  # Number of activity events to display
  plugin_activity_limit:
    description: Maximum number of events to display
    default: 5

  # Number of activity events to load
  # This should be higher than "plugin_activity_limit"
  # A high number will consume more requests
  plugin_activity_load:
    description: Number of events to load
    default: 300

  # Filter events by age
  # Note that it only filter fetched events, you may need to increase "plugin_activity_limit" to display older events
  # Set to 0 to disable age filtering
  plugin_activity_days:
    description: Maximum event age
    default: 14

  # Filter events by type
  plugin_activity_filter:
    description: Events types to keep
    default: all

  # Set events visibility (use this to restrict events when using a "repo" token)
  plugin_activity_visibility:
    description: Set events visibility
    default: all

  # Display events timestamps
  plugin_activity_timestamps:
    description: Display events timestamps
    default: yes

  # List of repositories that will be skipped
  plugin_activity_skipped:
    description: Repositories to skip
    default: ""

  # Ignored actors (useful to ignore bots users)
  plugin_activity_ignored:
    description: Actors to ignore
    default: github-actions[bot], dependabot[bot], dependabot-preview[bot]

  # ====================================================================================
  # 🏆 Achievements

  # Enable or disable plugin
  plugin_achievements:
    description: Display achievements
    default: yes

  # Minimal rank to display
  plugin_achievements_threshold:
    description: Display rank minimal threshold
    default: C

  # Display secrets achievements unlocked
  plugin_achievements_secrets:
    description: Display unlocked secrets achievements
    default: yes

  # Achievements display style
  plugin_achievements_display:
    description: Achievements display style
    default: detailed

  # Number of achievements events to display
  # Set to 0 to disable limitations
  plugin_achievements_limit:
    description: Maximum number of achievements to display
    default: 0

  # List of unlocked achievements to hide
  # Names must be given in lower case, without rank adjective
  plugin_achievements_ignored:
    description: Unlocked achievements to hide
    default: ""

  # List of unlocked achievements to display
  # Names must be given in lower case, without rank adjective
  # Using this option is equivalent of using "plugin_achievements_ignored" with all existing achievements but the ones listed
  plugin_achievements_only:
    description: Unlocked achievements to display
    default: ""

  # ====================================================================================
  # 👨‍💻 Lines of code changed

  # Enable or disable plugin
  plugin_lines:
    description: Display lines of code metrics
    default: yes

  # List of repositories that will be skipped
  plugin_lines_skipped:
    description: Repositories to skip
    default: ""

  # ====================================================================================
  # 📓 Repositories

  # Enable or disable plugin
  plugin_repositories:
    description: Display chosen featured repositories
    default: yes

  # Featured repositories to display
  # If no owner is specified, it will implicitly use the current account login as owner
  plugin_repositories_featured:
    description: List of repositories to display
    default: "nextcord/nextcord"

  # ====================================================================================
  # 🙋 Introduction

  # Enable or disable plugin
  plugin_introduction:
    description: Display account or repository introduction
    default: no

  # Display introduction section title
  plugin_introduction_title:
    description: Display introduction section title
    default: yes

  # ====================================================================================
  # ⏰ WakaTime plugin

  # Enable or disable plugin
  plugin_wakatime:
    description: Display WakaTime stats
    default: no

  # WakaTime API token
  # See https://wakatime.com/settings/account get your API key
  plugin_wakatime_token:
    description: WakaTime API token
    default: ""

  # Time range to use for displayed stats
  plugin_wakatime_days:
    description: WakaTime time range
    default: 7

  # Sections to display
  plugin_wakatime_sections:
    description: Sections to display
    default: time, projects, projects-graphs, languages, languages-graphs, editors, os

  # Number of entries to display per graph
  # Set to 0 to disable limitations
  plugin_wakatime_limit:
    description: Maximum number of entries to display per graph
    default: 5

  # If you use a selfhosted wakatime instance (wakapi)
  # that is publicly available place your url here
  #
  # If you use the public wakapi instance the url
  # would be https://wakapi.dev
  plugin_wakatime_url:
    description: Address where to reach your Wakatime instance
    default: https://wakatime.com

  # ====================================================================================
  # 💉 Nightscout

  # Enable or disable plugin
  plugin_nightscout:
    description: Displays Blood Glucose
    default: no

  # Nightscout site URL
  plugin_nightscout_url:
    description: Your Nightscout site URL
    default: https://example.herokuapp.com

  # Controls how big the graph is
  plugin_nightscout_datapoints:
    description: How many datapoints to show on the graph. 0 and 1 disable the graph.
    default: 12

  # Low value used for colors and text alerts
  plugin_nightscout_lowalert:
    description: When the blood sugar is considered low
    default: 80

  # High value used for colors and text alerts
  plugin_nightscout_highalert:
    description: When the blood sugar is considered high
    default: 180

  # Urgent low value used for colors and text alerts
  plugin_nightscout_urgentlowalert:
    description: When the blood sugar is considered urgently low
    default: 50

  # Urgent high value used for colors and text alerts
  plugin_nightscout_urgenthighalert:
    description: When the blood sugar is considered urgently high
    default: 250

  # ====================================================================================
  # 💩 PoopMap plugin

  # Enable or disable plugin
  plugin_poopmap:
    description: Display PoopMap stats
    default: no

  # PoopMap API token
  plugin_poopmap_token:
    description: PoopMap API token
    default: ""

  # Time range to use for displayed stats
  plugin_poopmap_days:
    description: PoopMap time range
    default: 7


# ====================================================================================
# Action metadata
name: Metrics embed
author: lowlighter
description: An infographics generator with 30+ plugins and 200+ options to display stats about your GitHub account!
branding:
  icon: user-check
  color: gray-dark

# The action will parse its name to check if it's the official action or if it's a forked one
# On the official action, it'll use the docker image published on GitHub registry when using a released version, allowing faster runs
# On a forked action, it'll rebuild the docker image from Dockerfile to take into account changes you made
on:
jobs:
runs:
  using: composite
  steps:
    - run: |
        # Create environment file from inputs and GitHub variables
        echo "::group::Metrics docker image setup"
        echo "GitHub action: $METRICS_ACTION ($METRICS_ACTION_PATH)"
        cd $METRICS_ACTION_PATH
        touch .env
        for INPUT in $(echo $INPUTS | jq -r 'to_entries|map("INPUT_\(.key|ascii_upcase)=\(.value|@uri)")|.[]'); do
          echo $INPUT >> .env
        done
        env | grep -E '^(GITHUB|ACTIONS|CI|TZ)' >> .env
        echo "Environment variables: loaded"

        # Renders output folder
        METRICS_RENDERS="/metrics_renders"
        sudo mkdir -p $METRICS_RENDERS
        echo "Renders output folder: $METRICS_RENDERS"

        # Source repository (picked from action name)
        METRICS_SOURCE=$(echo $METRICS_ACTION | sed -E 's/metrics.*?$//g' | sed -E 's/_//g')
        echo "Source: $METRICS_SOURCE"

        # Version (picked from package.json)
        METRICS_VERSION=$(grep -Po '(?<="version": ").*(?=")' package.json)
        echo "Version: $METRICS_VERSION"

        # Image tag (extracted from version or from env)
        METRICS_TAG=v$(echo $METRICS_VERSION | sed -r 's/^([0-9]+[.][0-9]+).*/\1/')
        echo "Image tag: $METRICS_TAG"

        # Image name
        # Official action
        if [[ $METRICS_SOURCE == "lowlighter" ]]; then
          # Use registry with pre-built images
          if [[ ! $METRICS_USE_PREBUILT_IMAGE =~ ^([Ff]alse|[Oo]ff|[Nn]o|0)$ ]]; then
            # Is released version
            set +e
            METRICS_IS_RELEASED=$(expr $(expr match $METRICS_VERSION .*-beta) == 0)
            set -e
            echo "Is released version: $METRICS_IS_RELEASED"
            if [[ "$METRICS_IS_RELEASED" -eq "0" ]]; then
              METRICS_TAG="$METRICS_TAG-beta"
              echo "Image tag (updated): $METRICS_TAG"
            fi
            METRICS_IMAGE=ghcr.io/lowlighter/metrics:$METRICS_TAG
            echo "Using pre-built version $METRICS_TAG, will pull docker image from GitHub registry"
            if ! docker image pull $METRICS_IMAGE; then
              echo "Failed to fetch docker image from GitHub registry, will rebuild it locally"
              METRICS_IMAGE=metrics:$METRICS_VERSION
            fi
          # Rebuild image
          else
            echo "Using an unreleased version ($METRICS_VERSION)"
            METRICS_IMAGE=metrics:$METRICS_VERSION
          fi
        # Forked action
        else
          echo "Using a forked version"
          METRICS_IMAGE=metrics:forked-$METRICS_VERSION
        fi
        echo "Image name: $METRICS_IMAGE"

        # Build image if necessary
        set +e
        docker image inspect $METRICS_IMAGE
        METRICS_IMAGE_NEEDS_BUILD="$?"
        set -e
        if [[ "$METRICS_IMAGE_NEEDS_BUILD" -gt "0" ]]; then
          echo "Image $METRICS_IMAGE is not present locally, rebuilding it from Dockerfile"
          docker build -t $METRICS_IMAGE .
        else
          echo "Image $METRICS_IMAGE is present locally"
        fi
        echo "::endgroup::"

        # Run docker image with current environment
        docker run --init --volume $GITHUB_EVENT_PATH:$GITHUB_EVENT_PATH --volume $METRICS_RENDERS:/renders --env-file .env $METRICS_IMAGE
        rm .env
      shell: bash
      env:
        METRICS_ACTION: ${{ github.action }}
        METRICS_ACTION_PATH: ${{ github.action_path }}
        METRICS_USE_PREBUILT_IMAGE: ${{ inputs.use_prebuilt_image }}
        INPUTS: ${{ toJson(inputs) }}
        TZ: ${{ inputs.config_timezone }}
